# Copyright 2013, Qualcomm Innovation Center, Inc.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

import os
Import('env')

# x86 specific compiler flags

env.Append(CPPDEFINES=['QCC_OS_ANDROID',
                       'QCC_CPU_X86',
                       'ANDROID'])

env.Append(CPPFLAGS=['-march=i686',
                     '-mtune=generic'])

# Use Android provided tools for x86 architecture
if env.subst('$ANDROID_NDK_VERSION') in [ '7', '8' ]:
   env['ANDROID_TOOLS'] = '$ANDROID_NDK/toolchains/x86-4.4.3/prebuilt/$PREBUILT_HOST_OS/bin'
   env['AR'] = '$ANDROID_TOOLS/i686-android-linux-ar'
   env['CC'] = '$ANDROID_TOOLS/i686-android-linux-gcc'
   env['CXX'] = '$ANDROID_TOOLS/i686-android-linux-g++'
   env['LINK'] = '$ANDROID_TOOLS/i686-android-linux-gcc'
else:
   env['ANDROID_TOOLS'] = '$ANDROID_NDK/toolchains/x86-4.6/prebuilt/$PREBUILT_HOST_OS/bin'
   env['AR'] = '$ANDROID_TOOLS/i686-linux-android-ar'
   env['CC'] = '$ANDROID_TOOLS/i686-linux-android-gcc'
   env['CXX'] = '$ANDROID_TOOLS/i686-linux-android-g++'
   env['LINK'] = '$ANDROID_TOOLS/i686-linux-android-gcc'

# include paths
if env.subst('$ANDROID_NDK_VERSION') in [ '7', '8' ]:
   env.Append(CPPPATH=['$ANDROID_NDK/platforms/android-$ANDROID_API_LEVEL_NDK/arch-x86/usr/include',
                       #Using GNU STL.
                       '$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/include',
                       '$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/include/backward',
                       '$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/libs/x86/include',
                       '$ANDROID_SRC/external/bluetooth/bluez/include',
                       '$ANDROID_SRC/external/openssl/include'])
else:
   env.Append(CPPPATH=['$ANDROID_NDK/platforms/android-$ANDROID_API_LEVEL_NDK/arch-x86/usr/include',
                       #Using GNU STL.
                       '$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.6/include',
                       '$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.6/include/backward',
                       '$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.6/libs/x86/include',
                       '$ANDROID_SRC/external/bluetooth/bluez/include',
                       '$ANDROID_SRC/external/openssl/include'])

# library locations
env.Append(LIBPATH=['$ANDROID_NDK/platforms/android-$ANDROID_API_LEVEL_NDK/arch-x86/usr/lib'])
env.Append(LIBPATH=['$ANDROID_SRC/x86/out/target/product/$ANDROID_TARGET/system/lib'])

if env.subst('$ANDROID_NDK_VERSION') in [ '7', '8' ]:
   env.Append(LIBPATH=['$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/libs/x86'])
   env.Append(LIBPATH=['$ANDROID_NDK/toolchains/x86-4.4.3/prebuilt/$PREBUILT_HOST_OS/lib/gcc/i686-linux-android/4.4.3/'])
else:
   env.Append(LIBPATH=['$ANDROID_NDK/sources/cxx-stl/gnu-libstdc++/4.6/libs/x86'])
   env.Append(LIBPATH=['$ANDROID_NDK/toolchains/x86-4.6/prebuilt/$PREBUILT_HOST_OS/lib/gcc/i686-linux-android/4.6/'])

# link flags
env.Append(LINKFLAGS=['--sysroot=$ANDROID_NDK/platforms/android-$ANDROID_API_LEVEL_NDK/arch-x86',
                      '-Wl,-rpath-link=$ANDROID_NDK/platforms/android-$ANDROID_API_LEVEL_NDK/arch-x86/usr/lib'])

# SCons default SHLINKFLAGS is '$LINKFLAGS -shared'.  Since we don't
# want to pull in $LINKFLAGS, reset it here instead of Append().

if env['VARIANT'] == 'debug':
   stripomatic = ''
else:
   stripomatic = '-s'

env['SHLINKFLAGS'] = ' '.join(['-Wl,-soname,${TARGET.file} '
                               '-shared',
                               '--sysroot=$ANDROID_NDK/platforms/android-$ANDROID_API_LEVEL_NDK/arch-x86',
                               '$ANDROID_NDK/platforms/android-$ANDROID_API_LEVEL_NDK/arch-x86/usr/lib/libc.so',
                               '$ANDROID_NDK/platforms/android-$ANDROID_API_LEVEL_NDK/arch-x86/usr/lib/libstdc++.so',
                               '$ANDROID_NDK/platforms/android-$ANDROID_API_LEVEL_NDK/arch-x86/usr/lib/libm.so',
                               '-Wl,--no-undefined',
                               '-Wl,-z,noexecstack',
                               '-Wl,-rpath-link=$ANDROID_NDK/platforms/android-$ANDROID_API_LEVEL_NDK/arch-x86/usr/lib',
                               stripomatic])
